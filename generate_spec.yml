---

- hosts: all
  become: no
  gather_facts: yes
  tasks:
    - name : Create host_vars folder
      local_action: file
        path=./host_vars
        state=directory

    - name: Destroy exsting spec file
      local_action: file
        path=./host_vars/{{ inventory_hostname }}.yml
        state=absent

    - name: Create spec file
      local_action: file
        path=./host_vars/{{ inventory_hostname }}.yml
        state=touch

    - name: Create yaml header
      local_action: lineinfile
        line="---\n"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add cpu model
      local_action: lineinfile
        line="cpu_model{{':'}} '{{ ansible_processor[1] }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add cpu count
      local_action: lineinfile
        line="cpu_count{{':'}} {{ ansible_processor_count }}"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add cores per cpu
      local_action: lineinfile
        line="cores_per_cpu{{':'}} {{ ansible_processor_cores }}"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add total memory (mb)
      local_action: lineinfile
        line="total_memory_mb{{':'}} {{ ansible_memtotal_mb }}"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add free memory (mb)
      local_action: lineinfile
        line="free_memory_mb{{':'}} {{ ansible_memfree_mb }}"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add total swap space (mb)
      local_action: lineinfile
        line="total_swap_mb{{':'}} {{ ansible_swaptotal_mb }}"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add virtualization type
      local_action: lineinfile
        line="virtualization_type{{':'}} '{{ ansible_virtualization_type }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add IPv4 addresses declaration
      local_action: lineinfile
        line="ipv4_addresses{{':'}}"
        dest=./host_vars/{{ inventory_hostname }}.yml
        
    - name: Add IPv4 addresses declaration
      local_action: lineinfile
        line="                - \"{{ item }}\""
        dest=./host_vars/{{ inventory_hostname }}.yml
      with_items: ansible_all_ipv4_addresses

    - name: Add IPv6 addresses declaration
      local_action: lineinfile
        line="ipv6_addresses{{':'}}"
        dest=./host_vars/{{ inventory_hostname }}.yml
        
    - name: Add IPv6 addresses declaration
      local_action: lineinfile
        line="                - \"{{ item }}\""
        dest=./host_vars/{{ inventory_hostname }}.yml
      with_items: ansible_all_ipv6_addresses

    - name: Add system architecture
      local_action: lineinfile
        line="system_architecture{{':'}} '{{ ansible_architecture }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add linux distribution
      local_action: lineinfile
        line="linux_distribution{{':'}} '{{ ansible_distribution }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add distribution version
      local_action: lineinfile
        line="distribution_version{{':'}} '{{ ansible_distribution_version }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add FQDN
      local_action: lineinfile
        line="fqdn{{':'}} '{{ ansible_fqdn }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Add selinux (when installed)
      local_action: lineinfile
        line="selinux_status{{':'}} '{{ ansible_selinux.status }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml
      when: ansible_selinux.status is defined

    - name: Add selinux (not installed)
      local_action: lineinfile
        line="selinux_status{{':'}} 'N/A'"
        dest=./host_vars/{{ inventory_hostname }}.yml
      when: ansible_selinux.status is not defined

    - name: Get CPU performance stats
      shell: echo '2^2^21' | { /usr/bin/time -f '%e' bc > /dev/null ;} 2>&1
      ignore_errors: yes
      register: cpu_performance
 
    - name: Add CPU performance stats
      local_action: lineinfile
        line="cpu_performance{{':'}} '{{ cpu_performance.stdout }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml
      when: cpu_performance|succeeded

    - name: Add CPU performance stats
      local_action: lineinfile
        line="cpu_performance{{':'}} 'N/A'"
        dest=./host_vars/{{ inventory_hostname }}.yml
      when: cpu_performance|failed

    - name: Get bandwidth stats
      shell: speedtest --simple
      register: network_performance

    - name: Add bandwidth stats
      local_action: lineinfile
        line="{{ network_performance.stdout }}"
        dest=./host_vars/{{ inventory_hostname }}.yml
      when: network_performance|succeeded

    - name: Add CPU performance stats
      local_action: lineinfile
        line="Ping{{':'}} 'N/A'\nDownload{{':'}} 'N/A'\nUpload{{':'}} 'N/A'"
        dest=./host_vars/{{ inventory_hostname }}.yml
      when: network_performance|failed

    - name: Get CPU utilization
      shell: top -b -n2 -p 1 | fgrep "Cpu(s)" | tail -1 | awk -F'id,' -v prefix="$prefix" '{ split($1, vs, ","); v=vs[length(vs)]; sub("%", "", v); printf "%s%.1f%%\n", prefix, 100 - v }'
      register: cpu_utilization
 
    - name: Add CPU utilization
      local_action: lineinfile
        line="cpu_utilization{{':'}} '{{ cpu_utilization.stdout }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

    - name: Get outstanding security updates 
      shell: /usr/bin/yum --debuglevel 2 --security check-update 2>/dev/null | head -n 2 | tail -n 1 | awk '{ print $1 }'
      register: security_patches
 
    - name: Add outstanding security patches
      local_action: lineinfile
        line="security_patches{{':'}} '{{ security_patches.stdout }}'"
        dest=./host_vars/{{ inventory_hostname }}.yml

